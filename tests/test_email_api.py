"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã Email API
"""
import asyncio
import sys
sys.path.append('..')

from services.email_api import EmailAPIService
from utils.logger import logger


async def test_email_api():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π Email API"""
    
    print("=" * 50)
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Email API")
    print("=" * 50)
    
    async with EmailAPIService() as email_service:
        # 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞
        print("\n1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞...")
        balance = await email_service.get_balance()
        if balance is not None:
            print(f"‚úÖ –ë–∞–ª–∞–Ω—Å: ${balance:.4f}")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞")
            return
        
        # 2. –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–æ—á—Ç
        print("\n2Ô∏è‚É£ –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–æ—á—Ç –¥–ª—è Fiverr...")
        domains = await email_service.get_available_emails("fiverr.com")
        if domains:
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –¥–æ–º–µ–Ω–æ–≤: {len(domains)}")
            for domain, info in list(domains.items())[:5]:
                count = info.get('count', 0)
                price = info.get('price', 0)
                print(f"   ‚Ä¢ {domain}: {count} —à—Ç. –ø–æ ${price}")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –ø–æ—á—Ç")
            return
        
        # 3. –¢–µ—Å—Ç –∑–∞–∫–∞–∑–∞ –ø–æ—á—Ç—ã (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
        response = input("\n3Ô∏è‚É£ –ó–∞–∫–∞–∑–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—É—é –ø–æ—á—Ç—É? (y/n): ")
        if response.lower() == 'y':
            print("–ó–∞–∫–∞–∑ –ø–æ—á—Ç—ã...")
            email_data = await email_service.order_email(
                site="fiverr.com",
                domain="gmx.com"
            )
            
            if email_data:
                print(f"‚úÖ –ü–æ—á—Ç–∞ –∑–∞–∫–∞–∑–∞–Ω–∞:")
                print(f"   Email: {email_data['email']}")
                print(f"   ID: {email_data['id']}")
                
                # –û—Ç–º–µ–Ω—è–µ–º –∞–∫—Ç–∏–≤–∞—Ü–∏—é
                print("\n–û—Ç–º–µ–Ω–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏...")
                if await email_service.cancel_email(email_data['id']):
                    print("‚úÖ –ê–∫—Ç–∏–≤–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞")
                else:
                    print("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–º–µ–Ω—ã –∞–∫—Ç–∏–≤–∞—Ü–∏–∏")
            else:
                print("‚ùå –û—à–∏–±–∫–∞ –∑–∞–∫–∞–∑–∞ –ø–æ—á—Ç—ã")
    
    print("\n" + "=" * 50)
    print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print("=" * 50)


if __name__ == "__main__":
    asyncio.run(test_email_api())

